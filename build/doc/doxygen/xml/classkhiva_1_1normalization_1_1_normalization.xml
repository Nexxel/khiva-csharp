<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classkhiva_1_1normalization_1_1_normalization" kind="class" language="C#" prot="public">
    <compoundname>khiva::normalization::Normalization</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classkhiva_1_1normalization_1_1_normalization_1a291b871a81c368b7d3319858edcf1de0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classkhiva_1_1array_1_1_array" kindref="compound">array.Array</ref></type>
        <definition>static array.Array khiva.normalization.Normalization.DecimalScalingNorm</definition>
        <argsstring>(array.Array tss)</argsstring>
        <name>DecimalScalingNorm</name>
        <param>
          <type><ref refid="classkhiva_1_1array_1_1_array" kindref="compound">array.Array</ref></type>
          <declname>tss</declname>
        </param>
        <briefdescription>
<para>Normalizes the given time series according to its maximum value and adjusts each value within the range (-1, 1). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tss</parametername>
</parameternamelist>
<parameterdescription>
<para>Expects an input array whose dimension zero is the length of the time series (all the same) and dimension one indicates the number of time series.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An array with the same dimensions as tss, whose values (time series in dimension 0) have been normalized by dividing each number by 10^j, where j is the number of integer digits of the max number in the time series.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/sergio.gonzalez/Desktop/Sergio/khiva-csharp/KhivaCsharp/KhivaCsharp/Normalization.cs" line="31" column="1" bodyfile="C:/Users/sergio.gonzalez/Desktop/Sergio/khiva-csharp/KhivaCsharp/KhivaCsharp/Normalization.cs" bodystart="31" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classkhiva_1_1normalization_1_1_normalization_1acfd4bed1b714bd16d51831c207db9c11" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void khiva.normalization.Normalization.DecimalScalingNorm</definition>
        <argsstring>(ref array.Array tss)</argsstring>
        <name>DecimalScalingNorm</name>
        <param>
          <type>ref <ref refid="classkhiva_1_1array_1_1_array" kindref="compound">array.Array</ref></type>
          <declname>tss</declname>
        </param>
        <briefdescription>
<para>Same as decimal_scaling_norm, but it performs the operation in place, without allocating further memory. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tss</parametername>
</parameternamelist>
<parameterdescription>
<para>Expects an input array whose dimension zero is the length of the time series (all the same) and dimension one indicates the number of time series.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/sergio.gonzalez/Desktop/Sergio/khiva-csharp/KhivaCsharp/KhivaCsharp/Normalization.cs" line="44" column="1" bodyfile="C:/Users/sergio.gonzalez/Desktop/Sergio/khiva-csharp/KhivaCsharp/KhivaCsharp/Normalization.cs" bodystart="44" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classkhiva_1_1normalization_1_1_normalization_1ab3eae533383b43c78d27aac6d61f257c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classkhiva_1_1array_1_1_array" kindref="compound">array.Array</ref></type>
        <definition>static array.Array khiva.normalization.Normalization.MaxMinNorm</definition>
        <argsstring>(array.Array tss, double high, double low, double epsilon=0.00000001)</argsstring>
        <name>MaxMinNorm</name>
        <param>
          <type><ref refid="classkhiva_1_1array_1_1_array" kindref="compound">array.Array</ref></type>
          <declname>tss</declname>
        </param>
        <param>
          <type>double</type>
          <declname>high</declname>
        </param>
        <param>
          <type>double</type>
          <declname>low</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
          <defval>0.00000001</defval>
        </param>
        <briefdescription>
<para>Normalizes the given time series according to its minimum and maximum value and adjusts each value within the range[low, high]. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tss</parametername>
</parameternamelist>
<parameterdescription>
<para>Expects an input array whose dimension zero is the length of the time series (all the same) and dimension one indicates the number of time series.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>high</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum final value (Defaults to 1.0).</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>low</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum final value (Defaults to 0.0).</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>Safeguard for constant (or near constant) time series as the operation implies a unit scale operation between min and max values in the tss.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Array with the same dimensions as tss, whose values (time series in dimension 0) have been normalized by maximum and minimum values, and scaled as per high and low parameters.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/sergio.gonzalez/Desktop/Sergio/khiva-csharp/KhivaCsharp/KhivaCsharp/Normalization.cs" line="62" column="1" bodyfile="C:/Users/sergio.gonzalez/Desktop/Sergio/khiva-csharp/KhivaCsharp/KhivaCsharp/Normalization.cs" bodystart="62" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classkhiva_1_1normalization_1_1_normalization_1af484ba6fbbec31a345f085037d9f41de" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void khiva.normalization.Normalization.MaxMinNorm</definition>
        <argsstring>(ref array.Array tss, double high, double low, double epsilon=0.00000001)</argsstring>
        <name>MaxMinNorm</name>
        <param>
          <type>ref <ref refid="classkhiva_1_1array_1_1_array" kindref="compound">array.Array</ref></type>
          <declname>tss</declname>
        </param>
        <param>
          <type>double</type>
          <declname>high</declname>
        </param>
        <param>
          <type>double</type>
          <declname>low</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
          <defval>0.00000001</defval>
        </param>
        <briefdescription>
<para>Same as max_min_norm, but it performs the operation in place, without allocating further memory. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tss</parametername>
</parameternamelist>
<parameterdescription>
<para>Expects an input array whose dimension zero is the length of the time series (all the same) and dimension one indicates the number of time series.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>high</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum final value (Defaults to 1.0).</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>low</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum final value (Defaults to 0.0).</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>Safeguard for constant (or near constant) time series as the operation implies a unit scale operation between min and max values in the tss.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/sergio.gonzalez/Desktop/Sergio/khiva-csharp/KhivaCsharp/KhivaCsharp/Normalization.cs" line="79" column="1" bodyfile="C:/Users/sergio.gonzalez/Desktop/Sergio/khiva-csharp/KhivaCsharp/KhivaCsharp/Normalization.cs" bodystart="79" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classkhiva_1_1normalization_1_1_normalization_1a415116b28fbc879cb8d303d23fa27960" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classkhiva_1_1array_1_1_array" kindref="compound">array.Array</ref></type>
        <definition>static array.Array khiva.normalization.Normalization.MeanNorm</definition>
        <argsstring>(array.Array tss)</argsstring>
        <name>MeanNorm</name>
        <param>
          <type><ref refid="classkhiva_1_1array_1_1_array" kindref="compound">array.Array</ref></type>
          <declname>tss</declname>
        </param>
        <briefdescription>
<para>Normalizes the given time series according to its maximum-minimum value and its mean. It follows the following formulae: <formula id="48">\[ \acute{x} = \frac{x - mean(x)}{max(x) - min(x)}. \]</formula> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tss</parametername>
</parameternamelist>
<parameterdescription>
<para>Expects an input array whose dimension zero is the length of the time series (all the same) and dimension one indicates the number of time series.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An array with the same dimensions as tss, whose values (time series in dimension 0) have been normalized by substracting the mean from each number and dividing each number by <formula id="49">$ max(x) - min(x)$</formula>, in the time series.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/sergio.gonzalez/Desktop/Sergio/khiva-csharp/KhivaCsharp/KhivaCsharp/Normalization.cs" line="98" column="1" bodyfile="C:/Users/sergio.gonzalez/Desktop/Sergio/khiva-csharp/KhivaCsharp/KhivaCsharp/Normalization.cs" bodystart="98" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classkhiva_1_1normalization_1_1_normalization_1a0ea50b378b754403bf80a895a7ddb63f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void khiva.normalization.Normalization.MeanNorm</definition>
        <argsstring>(ref array.Array tss)</argsstring>
        <name>MeanNorm</name>
        <param>
          <type>ref <ref refid="classkhiva_1_1array_1_1_array" kindref="compound">array.Array</ref></type>
          <declname>tss</declname>
        </param>
        <briefdescription>
<para>Normalizes the given time series according to its maximum-minimum value and its mean. It follows the following formulae: <formula id="48">\[ \acute{x} = \frac{x - mean(x)}{max(x) - min(x)}. \]</formula> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tss</parametername>
</parameternamelist>
<parameterdescription>
<para>Expects an input array whose dimension zero is the length of the time series (all the same) and dimension one indicates the number of time series.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/sergio.gonzalez/Desktop/Sergio/khiva-csharp/KhivaCsharp/KhivaCsharp/Normalization.cs" line="115" column="1" bodyfile="C:/Users/sergio.gonzalez/Desktop/Sergio/khiva-csharp/KhivaCsharp/KhivaCsharp/Normalization.cs" bodystart="115" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classkhiva_1_1normalization_1_1_normalization_1a20d08a7e62353599b85bb223ee2b07bc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classkhiva_1_1array_1_1_array" kindref="compound">array.Array</ref></type>
        <definition>static array.Array khiva.normalization.Normalization.Znorm</definition>
        <argsstring>(array.Array tss, double epsilon)</argsstring>
        <name>Znorm</name>
        <param>
          <type><ref refid="classkhiva_1_1array_1_1_array" kindref="compound">array.Array</ref></type>
          <declname>tss</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
<para>Calculates a new set of times series with zero mean and standard deviation one. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tss</parametername>
</parameternamelist>
<parameterdescription>
<para>Time series concatenated in a single row.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum standard deviation to consider. It acts as a gatekeeper for those time series that may be constant or near constant.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Array with the same dimensions as tss where the time series have been adjusted for zero mean and one as standard deviation.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/sergio.gonzalez/Desktop/Sergio/khiva-csharp/KhivaCsharp/KhivaCsharp/Normalization.cs" line="130" column="1" bodyfile="C:/Users/sergio.gonzalez/Desktop/Sergio/khiva-csharp/KhivaCsharp/KhivaCsharp/Normalization.cs" bodystart="130" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classkhiva_1_1normalization_1_1_normalization_1a708ca228ebe1822c77eabf8a78338747" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void khiva.normalization.Normalization.Znorm</definition>
        <argsstring>(ref array.Array tss, double epsilon)</argsstring>
        <name>Znorm</name>
        <param>
          <type>ref <ref refid="classkhiva_1_1array_1_1_array" kindref="compound">array.Array</ref></type>
          <declname>tss</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
<para>Adjusts the time series in the given input and performs z-norm inplace(without allocating further memory). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tss</parametername>
</parameternamelist>
<parameterdescription>
<para>Expects an input array whose dimension zero is the length of the time series(all the same) and dimension one indicates the number of time series.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum standard deviation to consider. It acts as a gatekeeper for those time series that may be constant or near constant.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/sergio.gonzalez/Desktop/Sergio/khiva-csharp/KhivaCsharp/KhivaCsharp/Normalization.cs" line="145" column="1" bodyfile="C:/Users/sergio.gonzalez/Desktop/Sergio/khiva-csharp/KhivaCsharp/KhivaCsharp/Normalization.cs" bodystart="145" bodyend="150"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classkhiva_1_1_khiva" kindref="compound">Khiva</ref> <ref refid="classkhiva_1_1normalization_1_1_normalization" kindref="compound">Normalization</ref> class containing several normalization methods. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/sergio.gonzalez/Desktop/Sergio/khiva-csharp/KhivaCsharp/KhivaCsharp/Normalization.cs" line="21" column="1" bodyfile="C:/Users/sergio.gonzalez/Desktop/Sergio/khiva-csharp/KhivaCsharp/KhivaCsharp/Normalization.cs" bodystart="20" bodyend="151"/>
    <listofallmembers>
      <member refid="classkhiva_1_1normalization_1_1_normalization_1a291b871a81c368b7d3319858edcf1de0" prot="public" virt="non-virtual"><scope>khiva::normalization::Normalization</scope><name>DecimalScalingNorm</name></member>
      <member refid="classkhiva_1_1normalization_1_1_normalization_1acfd4bed1b714bd16d51831c207db9c11" prot="public" virt="non-virtual"><scope>khiva::normalization::Normalization</scope><name>DecimalScalingNorm</name></member>
      <member refid="classkhiva_1_1normalization_1_1_normalization_1ab3eae533383b43c78d27aac6d61f257c" prot="public" virt="non-virtual"><scope>khiva::normalization::Normalization</scope><name>MaxMinNorm</name></member>
      <member refid="classkhiva_1_1normalization_1_1_normalization_1af484ba6fbbec31a345f085037d9f41de" prot="public" virt="non-virtual"><scope>khiva::normalization::Normalization</scope><name>MaxMinNorm</name></member>
      <member refid="classkhiva_1_1normalization_1_1_normalization_1a415116b28fbc879cb8d303d23fa27960" prot="public" virt="non-virtual"><scope>khiva::normalization::Normalization</scope><name>MeanNorm</name></member>
      <member refid="classkhiva_1_1normalization_1_1_normalization_1a0ea50b378b754403bf80a895a7ddb63f" prot="public" virt="non-virtual"><scope>khiva::normalization::Normalization</scope><name>MeanNorm</name></member>
      <member refid="classkhiva_1_1normalization_1_1_normalization_1a20d08a7e62353599b85bb223ee2b07bc" prot="public" virt="non-virtual"><scope>khiva::normalization::Normalization</scope><name>Znorm</name></member>
      <member refid="classkhiva_1_1normalization_1_1_normalization_1a708ca228ebe1822c77eabf8a78338747" prot="public" virt="non-virtual"><scope>khiva::normalization::Normalization</scope><name>Znorm</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
